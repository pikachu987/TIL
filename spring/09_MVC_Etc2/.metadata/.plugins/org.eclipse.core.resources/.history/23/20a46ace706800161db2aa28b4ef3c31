package config;

import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.XmlWebApplicationContext;
import org.springframework.web.filter.CharacterEncodingFilter;
import org.springframework.web.servlet.support.AbstractDispatcherServletInitializer;

/**
 * WebApplicationInitializer 를 상속하면, 서블릿 컨테이너가 실행될 때 onStartup() 메소드가 자동으로 호출된다.
 * 이 클래스는 web.xml 의 역할을 대신하거나 보충한다.
 * @author guanho
 *
 */
public class Initializer extends AbstractDispatcherServletInitializer{

	@Override
	protected WebApplicationContext createServletApplicationContext() {
		XmlWebApplicationContext servletAppContext = new XmlWebApplicationContext();
		servletAppContext.setConfigLocation("/WEB-INF/dispatcher.xml");
		return servletAppContext;
	}
	
	@Override
	protected String getServletName() {
		return "dispatcher";
	}
	@Override
	protected String[] getServletMappings() {
		return new String[]{"/"};
	}
	@Override
	protected boolean isAsyncSupported() {
		return super.isAsyncSupported();
	}
	@Override
	protected WebApplicationContext createRootApplicationContext() {
		XmlWebApplicationContext rootAppContext = new XmlWebApplicationContext();
		rootAppContext.setConfigLocation("/WEB-INF/root.xml");
		return rootAppContext;
	}
    @Override
    protected Filter[] getServletFilters() {
    	CharacterEncodingFilter encodingFilter = new CharacterEncodingFilter();
    	encodingFilter.setEncoding("UTF-8");
    	Filter[] filters = new Filter[]{encodingFilter};
    	return filters;
    }
}
