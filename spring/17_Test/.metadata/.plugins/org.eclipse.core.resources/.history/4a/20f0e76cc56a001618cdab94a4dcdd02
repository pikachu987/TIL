package com.company;

import static org.hamcrest.Matchers.*;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.servlet.view.InternalResourceViewResolver;

import config.MvcConfig;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(classes=MvcConfig.class)
@WebAppConfiguration
public class Test7 {
	@Autowired
	private WebApplicationContext ctx;
	private MockMvc mockMvc;

	@Before
	public void setUp() {
		mockMvc = MockMvcBuilders.webAppContextSetup(ctx).build();
	}

	@Test
	public void test1() throws Exception {
		mockMvc.perform(get("/h/hello.json"))
		.andExpect(jsonPath("$.list[1].name", equalTo("aaa1")));
	}
	
	@Test
	public void test2() throws Exception {
		mockMvc.perform(get("/h/hello.json"))
		.andExpect(jsonPath("$.list").value(hasSize(3)))
		.andExpect(jsonPath("$.list[0].name").value("aaa"))
		.andExpect(jsonPath("$.list[%d].name", 1).value("aaa1"));
	}
}
